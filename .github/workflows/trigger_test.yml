name: PR Merge Workflow

on:
  pull_request: # Trigger the workflow on a pull request

jobs:
  build-and-run:
    runs-on: ubuntu-latest  # The type of runner that the job will run on

    steps:
    - name: Checkout code # Checout the code into your github workspace
      uses: actions/checkout@v2
      
   

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Replace secrets in config.env
      run: |
        echo "Replacing secret values in config.env..."
        cat ./config/default.env
        sed -i 's|${ROOST_TOKEN}|'"$ROOST_TOKEN"'|g' ./config/default.env
        sed -i 's|${OPENAI_API_KEY}|'"$OPENAI_API_KEY"'|g' ./config/default.env
        echo "Contents after replacement:"
        cat ./config/default.env
      env:
        ROOST_TOKEN: ${{ secrets.ROOST_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # env:
      #   ROOST_TOKEN: ${{ secrets.ROOST_TOKEN }}
      #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # run: |
      #   envsubst < ./config/default.env > ./config/temp.env
      #   mv ./config/temp.env ./config/default.env

    - name: Run Docker container
      run: |
        # Build and run the Docker container
        docker run -i --name roostgpt -v $GITHUB_WORKSPACE:/workspaces:rw -v  $GITHUB_WORKSPACE/config:/roost/config zbio/roostgpt-cli:latest test create -c /roost/config/default.env
    - name: Cleanup Docker container
      if: always()  # This ensures the cleanup step runs even if previous steps fail
      run: |
        docker stop roostgpt
        docker rm roostgpt
